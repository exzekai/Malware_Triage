# Check if the current user has administrator privileges
if (-not ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)) {
    # Create a new process object to start an elevated PowerShell session
    $psi = New-Object System.Diagnostics.ProcessStartInfo
    $psi.FileName = 'powershell'
    $psi.Arguments = "-NoProfile -ExecutionPolicy Bypass -File `"$($MyInvocation.MyCommand.Path)`""

    # Start the process with admin privileges
    $psi.Verb = 'runas'
    $process = [System.Diagnostics.Process]::Start($psi)

    # Wait for the elevated PowerShell session to exit
    $process.WaitForExit()

    # Exit the script
    exit
}
#Get prefetch items of last 7 days and sort so we see recent ones first
Get-ChildItem "C:\Windows\Prefetch" -Recurse -Force -File -Filter * -ErrorAction SilentlyContinue | Where-Object {$_.CreationTime -ge (Get-Date).AddDays(-7)} | Sort-Object LastWriteTime -Descending

# Set the output file name
$outputFileName = "Prefetch_Files_For_" + (Get-Date).ToString("MM-dd-yy") + "To" + (Get-Date).AddDays(-7).ToString("MM-dd-yy") + ".txt"

#User key press will resume the script execution
Write-Host "Press any key to continue..."
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")

